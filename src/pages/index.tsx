import Head from "next/head";
import styles from "@/styles/pages/Home.module.scss";
import Card from "@/components/Card";
import { mock } from "@/utils/data";
import { CardData } from "@/utils/types/typeCard";
import Navbar from "@/components/Navbar";
import HeroSection from "@/components/HeroSection";
import DropdownList from "@/components/DropdownList";
import { useState, useEffect } from "react";

type PageProps = {
  data: {
    data: CardData[];
  };
  departurePorts: string[];
};

export default function Home(props: PageProps) {
  // VARIABLES ----------------------
  const stepData = 8;
  // CONDITIONS ---------------------
  const [isFilterActive, setIsFilterActive] = useState(false);
  const [dataToShow, setDataToShow] = useState<CardData[]>([]);
  // FUNCTIONS ----------------------
  const handleFilter = (filterValue: string) => {
    if (filterValue !== "All") {
      setIsFilterActive(true);
    } else {
      setIsFilterActive(false);
    }
  };
  const handleSpecificFilter = (valueFilter: string) => {};

  const handleAddMoreContent = () => {
    const auxArray: CardData[] = [];
    for (
      let index = dataToShow.length;
      index < stepData + dataToShow.length;
      index++
    ) {
      auxArray.push(props.data.data[index]);
    }
    setDataToShow(auxArray);
  };

  useEffect(() => {
    if (props) {
      handleAddMoreContent();
    }
  }, [props]);
  // VARIABLES ----------------------
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="./assets/images/logo.svg" />
      </Head>
      <main className={`${styles.main}`}>
        <header>
          <Navbar />
        </header>
        <section>
          <HeroSection
            title="Actual HERO CAARDDDD"
            backgroundImageUrl="https://firebasestorage.googleapis.com/v0/b/meal-hub-3d81b.appspot.com/o/extra%2Fhero.jpeg?alt=media&token=09bef443-8c29-4fc0-acc2-2fe0652e8c59"
          />
        </section>

        <section className={styles.section__container}>
          <div className={styles.section__content__header}>
            <DropdownList
              values={["Mostra porti di partenza"]}
              name={"Tutti i risultati"}
              callback={(value) => handleFilter(value)}
            />
            {isFilterActive ? (
              <DropdownList
                values={props.departurePorts}
                name="Seleziona porto"
                callback={(value) => console.log("selezionato : ", value)}
              />
            ) : null}
          </div>
          <div className={styles.section__content}>
            {dataToShow.map((card: CardData, index: number) => {
              return (
                <Card key={index + "HomePageCards" + card.id} data={card} />
              );
            })}
          </div>
        </section>
      </main>
    </>
  );
}

export async function getServerSideProps() {
  let data;
  await fetch("http://localhost:3001/api/allDepartues", {
    method: "POST",
    body: "getAllData",
  }).then(async (res) => {
    const alldata = await res.json();
    // console.log(alldata);
    data = alldata;
  });
  return {
    props: {
      data,
      departurePorts: ["Palermo", "Venezia"],
    },
  };
}
